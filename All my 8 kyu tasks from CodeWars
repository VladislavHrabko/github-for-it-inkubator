First task

Messi goals function
Messi is a soccer player with goals in three leagues:
LaLiga
Copa del Rey
Champions
Complete the function to return his total number of goals in all three leagues.
Note: the input will always be valid.

Issue:
function goals (laLigaGoals, copaDelReyGoals, championsLeagueGoals) {
return laLigaGoals + copaDelReyGoals + championsLeagueGoals;
}

Second task

Write a function that checks if a given string (case insensitive) is a palindrome.

Issuue:  
function isPalindrome(x) {
  return x.toLowerCase() === x.toLowerCase().split('').reverse().join('') ? true : false;
}

Third task
You are given two interior angles (in degrees) of a triangle.
Write a function to return the 3rd.
Note: only positive integers will be tested.
https://en.wikipedia.org/wiki/Triangle

Issue:
function otherAngle(a, b) {
  return 180 - a - b;
}

Fourth task
When provided with a number between 0-9, return it in words.
Input :: 1
Output :: "One".
If your language supports it, try using a switch statement.

Issue:   
function switchItUp(number) {
return (number === 1) ? 'One' : (number === 2) ? "Two" : (number === 3) ? 'Three' :  (number === 4)
 ? 'Four' : (number === 5) ? 'Five' : (number === 6) ? 'Six' : (number === 7) ? 'Seven' : (number === 8) 
? 'Eight' : (number === 9) ? 'Nine' : 'Zero';
}

Fifth task
Take an array and remove every second element from the array. Always keep the first element and start removing with the next element.
Example:
["Keep", "Remove", "Keep", "Remove", "Keep", ...] --> ["Keep", "Keep", "Keep", ...]
None of the arrays will be empty, so you don't have to worry about that!

Issue:
function removeEveryOther(arr){
var array = [];
  for (var i = 0; i < arr.length; i += 2) {
  array.push(arr[i]);
  }
  return array;
}

Task 6
Complete the function so that it finds the average of the three scores passed to it and returns the letter value associated with that grade.

Issue:
function getGrade (s1, s2, s3) {
  const average = (s1 + s2  + s3) / 3;
  switch (true) {
    case average < 60: 
    return 'F';
      case average >= 60 &&  average < 70: 
    return 'D';
      case average >= 70 &&  average < 80: 
    return 'C';
      case average >= 80 &&  average < 90: 
    return 'B';
      case average >= 90 &&  average <= 100: 
    return 'A';
      }
}

Task 7
Bob needs a fast way to calculate the volume of a cuboid with three values: the length, width and height of the cuboid.
Write a function to help Bob with this calculation.

Issue: 
const Kata = {
  getVolumeOfCuboid(length, width, height) {
    return length * width * height;
  }
}

Task 8
Write a function to split a string and convert it into an array of words.

Issue: 
function stringToArray(string){
return string.split(' ');
}

Task 9 
Complete the function that takes two integers (a, b, where a < b) and return an array of all integers between the input parameters, including them.

Issue:
function between(a, b) {
  const array = [];
while (a <= b) {
  array.push(a++);
  }
  return array;
}


Task 10
Your task is to find the first element of an array that is not consecutive.
By not consecutive we mean not exactly 1 larger than the previous element of the array.
E.g. If we have an array [1,2,3,4,6,7,8] then 1 then 2 then 3 then 4 are all consecutive but 6 is not, so that's the first non-consecutive number.
If the whole array is consecutive then return null2.
The array will always have at least 2 elements1 and all elements will be numbers.
The numbers will also all be unique and in ascending order. The numbers could be positive or negative and the first non-consecutive could be either too!


Issue:
function firstNonConsecutive (arr) {
  let first = arr[0];
  let next;
  for (let i = 1; i < arr.length; i++) {
    if ((first + 1) !== arr[i]) {
      next = arr[i];
      break;
    }
    first ++;
  }
  return next !== undefined ? next : null;
}
Best solution:
function firstNonConsecutive(arr) {
  for (let i = 0; i < arr.length - 1; ++i) {
    if (arr[i] + 1 !== arr[i + 1]) {
      return arr[i + 1]
    }
  }
  return null
}


Task 11
Given three integers a ,b ,c, return the largest number obtained after inserting the following operators and brackets: +, *, ()
In other words , try every combination of a,b,c with [*+()] , and return the Maximum Obtained (Read the notes for more detail about it)
Example
With the numbers are 1, 2 and 3 , here are some ways of placing signs and brackets:
1 * (2 + 3) = 5
1 * 2 * 3 = 6
1 + 2 * 3 = 7
(1 + 2) * 3 = 9
So the maximum value that you can obtain is 9.
Notes:
The numbers are always positive.
The numbers are in the range (1  ≤  a, b, c  ≤  10).
You can use the same operation more than once.
It's not necessary to place all the signs and brackets.
Repetition in numbers may occur .
You cannot swap the operands. For instance, in the given example you cannot get expression (1 + 3) * 2 = 8.


Issue:
function expressionMatter(a, b, c) {
  let first = a * (b + c);
  let second = a * b * c;
  let third = a + b + c;
  let fourth = (a + b) * c;
  let array = [first, second, third, fourth];
array.sort((a, b) => b - a);
  return array[0];
}


Task 12
Create a function which answers the question "Are you playing banjo?".
If your name starts with the letter "R" or lower case "r", you are playing banjo!
The function takes a name as its only argument, and returns one of the following strings:
name + " plays banjo" 
name + " does not play banjo"
Names given are always valid strings.


Issue:
function areYouPlayingBanjo(name) {
//  if (name[0] == 'R' || name[0] == 'r') {
//    return name + " plays banjo";
//  } else {
//    return name + " does not play banjo";
//  }
// }
return (name[0] == 'R' || name[0] == 'r') 
? name + " plays banjo" 
: name + " does not play banjo";
}


Task 13
Messi's Goal Total
Use variables to find the sum of the goals Messi scored in 3 competitions
Information
Messi goal scoring statistics:
Competition	Goals
La Liga	43
Champions League	10
Copa del Rey	5
Task:
Create these three variables and store the appropriate values using the table above:
laLigaGoals
championsLeagueGoals
copaDelReyGoals
Create a fourth variable named totalGoals that stores the sum of all of Messi's goals for this year.

Issue:
var laLigaGoals = 43;
var championsLeagueGoals = 10;
var copaDelReyGoals = 5;
var totalGoals = laLigaGoals + championsLeagueGoals + copaDelReyGoals;


Task 14
The starship Enterprise has run into some problem when creating a program to greet everyone as they come aboard. 
It is your job to fix the code and get the program working again!

Issue:
function sayHello(name) {
  return 'Hello, ' + name;
}


Task 15
In this kata you will create a function that takes in a list and returns a list with the reverse order.

Issue:
function reverseList(list) {
return list.reverse();
}


Task 16
Remove an exclamation mark from the end of a string. 
For a beginner kata, you can assume that the input data is always a string, no need to verify it.

My Issue: 
function remove (string) {
var str = string.split('');
  if (str[str.length - 1] === '!') {
   str.pop();
  }
  return str.join('');
}
Best practice:
const remove = s => s.replace(/!$/, '');


Task 17
Consider an array/list of sheep where some sheep may be missing from their place. 
We need a function that counts the number of sheep present in the array (true means present).

My Issue:
function countSheeps(arrayOfSheep) {
  let answer = 0;
  for (let i = 0; i < arrayOfSheep.length; i++) {
    if (arrayOfSheep[i] === true) {
      answer++
    }
  }
  return answer;
}
Best practice:
function countSheeps(arrayOfSheeps) {
  return arrayOfSheeps.filter(Boolean).length;
}

Task 18
Write a function that returns a string in which firstname is swapped with last name.

My issue and best practice:
function nameShuffler(str){
  return str.split(' ').reverse().join(' ');
}

Task 19 
This function should test if the factor is a factor of base.
Return true if it is a factor or false if it is not.
About factors
Factors are numbers you can multiply together to get another number.
2 and 3 are factors of 6 because: 2 * 3 = 6
You can find a factor by dividing numbers. If the remainder is 0 then the number is a factor.
You can use the mod operator (%) in most languages to check for a remainder
For example 2 is not a factor of 7 because: 7 % 2 = 1
Note: base is a non-negative number, factor is a positive number.

My Issue:
function checkForFactor (base, factor) {
 return ((base % factor) == 0) ? true : false;
}

Best practice:
function checkForFactor (base, factor) {
  return base % factor === 0;
}


Task 20
I created this function to add five to any number that was passed in to it and return the new value. It doesn't throw any errors but it returns the wrong number.
Can you help me fix the function?

My issue:
function addFive(num) {
  var total = num + 5
  return total;
}


Task 21
Create a method to see whether the string is ALL CAPS.
Examples (input -> output)
"c" -> False
"C" -> True
"hello I AM DONALD" -> False
"HELLO I AM DONALD" -> True
"ACSKLDFJSgSKLDFJSKLDFJ" -> False
"ACSKLDFJSGSKLDFJSKLDFJ" -> True
In this Kata, a string is said to be in ALL CAPS whenever it does not contain any lowercase letter
so any string containing no letters at all is trivially considered to be in ALL CAPS.

My issue:
String.prototype.isUpperCase = function() {
return this.toString() === this.toUpperCase();
}


Task 22
Now you have to write a function that takes an argument and returns the square of it.

My issue:
function square(arg) {
  return arg * arg;
}


Task 23
Write a function that always returns 5
Sounds easy right? Just bear in mind that you can't use any of the following characters: 0123456789*+-/
Good luck :)

My issue:
function unusualFive() {
  return 'fives'.length;
}

Task 24
In JavaScript, your code is running in a function, let us step by step complete your first JS function.

My issue:
function helloWorld() {
  var str = "Hello World!";
  console.log(str);
}


Task 25
In javascript, Number is one of basic data types. It can be positive: 1,2,3, negative:-1,-100 , integer:123,456, decimal:3.1415926,-8.88 etc..
Numbers can use operators such as + - * / %
Task
I've written five function equal1,equal2,equal3,equal4,equal5, defines six global variables v1 v2 v3 v4 v5 v6, every function has two local variables a,b, please set the appropriate value for the two variables(select from v1--v6), 
making these function return value equal to 100. the function equal1 is completed, please refer to this example to complete the following functions
My issue:
let v1 = 50,
    v2 = 100,
    v3 = 150,
    v4 = 200,
    v5 = 2,
    v6 = 250;
function equal1(){
  let a = v1,   
      b = v1;   
  return a + b;
}
//Please refer to the example above to complete the following functions
function equal2(){
  let a = v3 , //set number value to a
      b = v1; //set number value to b
  return a - b;
}
function equal3(){
  let a = v1 , //set number value to a
      b = v5; //set number value to b
  return a * b;
}

function equal4(){
  let a = v4 , //set number value to a
      b = v5; //set number value to b
  return a / b;
}
function equal5(){
  let a =  v2; //set number value to a
      b =  v3; //set number value to b
  return a % b;
}
Task 26
In javascript, String is one of basic data types. Use "" or '' to declare a string variable. It can be letters:a,b,c,A,B,C, numbers: 123..., Various symbol:@#$%^&* , Control symbol:\n,\t etc..
String can use operators +, Connect two or more strings together.

My issue:
var a1="A",a2="a",b1="B",b2="b",c1="C",c2="c",d1="D",d2="d",e1="E",e2="e",n1="N",n2="n"
function Dad(){
  //select some variable to combine "Dad"
  return d1 + a2 + d2;
}
function Bee(){
  //select some variable to combine "Bee"
  return b1 + e2 + e2;
}
function banana(){
  //select some variable to combine "banana"
  return b2 + a2 + n2 + a2 + n2 + a2;
}
//answer some questions if you finished works above
function answer1(){
  //the answer should be "yes" or "no"
  return "no";
}
function answer2(){
  //the answer should be "yes" or "no"
  return "no";
}
function answer3(){
  //the answer should be "yes" or "no"
  return "yes";
}
