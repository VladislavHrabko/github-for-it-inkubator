Task 45:
For this challenge, you'll change the opacity of an animated element so it gradually fades as it reaches the right side of the screen.

In the displayed animation, the round element with the gradient background moves to the right by the 50% mark of the animation per the @keyframes rule.
Target the element with the id of ball and add the opacity property set to 0.1 at 50%, so the element fades as it moves to the right.

Issue:
 @keyframes fade {
    50% {
      left: 60%;
opacity: 0.1;
    }
  }
  
  Task 46:
  The previous challenges covered how to use some of the animation properties and the @keyframes rule. Another animation property is the animation-iteration-count, which allows you to control how many times you would like to loop through the animation. Here's an example:

animation-iteration-count: 3;
In this case the animation will stop after running 3 times, but it's possible to make the animation run continuously by setting that value to infinite.
To keep the ball bouncing on the right on a continuous loop, change the animation-iteration-count property to infinite.

Issue:
animation-iteration-count: infinite;

Task 47:
Here's one more continuous animation example with the animation-iteration-count property that uses the heart you designed in a previous challenge.

The one-second long heartbeat animation consists of two animated pieces. The heart elements (including the :before and :after pieces) are animated to change size using the transform property, and the background div is animated to change its color using the background property.
Keep the heart beating by adding the animation-iteration-count property for both the back class and the heart class and setting the value to infinite. The heart:before and heart:after selectors do not need any animation properties.
 Issue: 
 animation-iteration-count: infinite;
 
 
